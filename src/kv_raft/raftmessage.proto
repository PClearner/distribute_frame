syntax = "proto3";

package raft;

//1:vote 2:append 3:voteresponse 4:appendresponse 5:client 6:clientresponse

// Raft 协议中的日志条目
message LogEntry {

  uint64 index = 1;        // 日志条目的索引
  uint64 term = 2;         // 日志条目的任期
  string command = 3;     // 日志条目包含的命令 (例如 "PUT:k=5")
}

// RequestVote 请求
message RequestVote {

  uint64 term = 1;               // 请求投票的任期
  string candidate_id = 2;      // 请求投票的候选人ID
  uint64 last_log_index = 3;     // 候选人的最后日志索引
  uint64 last_log_term = 4;      // 候选人最后日志的任期
}

// RequestVoteResponse 响应
message RequestVoteResponse {

  uint64 term = 1;               // 当前任期
  bool vote_granted = 2;        // 是否同意投票
}

// AppendEntries 请求（Leader -> Follower）
message AppendEntries {

  uint64 term = 1;               // 当前任期
  string leader_id = 2;         // Leader 的 ID
  uint64 prev_log_index = 3;     // 当前日志条目的索引
  uint64 prev_log_term = 4;      // 当前日志条目的任期
  repeated LogEntry entries = 5; // 要复制的日志条目
  uint64 leader_commit = 6;      // Leader 的提交日志索引
}

// AppendEntriesResponse 响应（Follower -> Leader）
message AppendEntriesResponse {

  uint64 term = 1;               // 当前任期
  bool success = 2;             // 是否成功
  uint64 conflict_index = 3;     // 如果冲突，指示冲突的日志索引
  uint64 conflict_term = 4;      // 如果冲突，指示冲突日志的任期
}


message ClientRequest {
  string command = 1;
  uint64 index = 2;
  bool start = 3;

}

message ClientResponse{
  bool success = 1;
  string leaderid = 2;
  uint64 index = 3;
  string reason = 4;
}
